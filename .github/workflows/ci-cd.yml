name: Build, Test and Deploy to Remote Server

# Триггер для запуска пайплайна
on:
  push:
    branches:
      - main

jobs:
  build:
    # Задача запускается на ОС ubuntu
    runs-on: ubuntu-latest

    steps:
      # Это действие извлекает ваш репозиторий из папки $GITHUB_WORKSPACE,
      #  чтобы ваш рабочий процесс мог получить к нему доступ.
      - uses: actions/checkout@v3

      # Настройки java
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # Права на запуск gradlew
      - name: chmod for Gradle Wrapper
        run: chmod +x ./gradlew

      # билд проекта
      - name: Build project
        run: ./gradlew build


  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: chmod for Gradle Wrapper
        run: chmod +x ./gradlew

      # Тест проекта
      - name: Run tests
        run: ./gradlew test

  deploy:
    runs-on: ubuntu-latest
    # Для запуска требуется прохождение тестов
    needs: test

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: chmod for Gradle Wrapper
        run: chmod +x ./gradlew

      - name: Build the project (again for deploy)
        run: ./gradlew build

      # Настройка SSH клиента
      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}

      # Убиваем старый процесс с таким же работающим именем
      - name: kill old app
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.USER }}@${{ secrets.HOST }} 'pkill -f docker-file-test-app-0.0.1-SNAPSHOT.jar'

      # Копируем файл, который запустит приложение, в папку testCd на удаленном сервере
      - name: Copy files to remote server
        run: |
          scp -o StrictHostKeyChecking=no build/libs/docker-file-test-app-0.0.1-SNAPSHOT.jar ${{ secrets.USER }}@${{ secrets.HOST }}:testCd/

      # Запускаем новый файл
      - name: run new app
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.USER }}@${{ secrets.HOST }} 'nohup java -jar testCd/docker-file-test-app-0.0.1-SNAPSHOT.jar > app.log 2>&1 &'